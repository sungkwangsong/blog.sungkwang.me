<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[SungKwang's Blog RSS Feed]]></title><description><![CDATA[I'm a full stack web developer.]]></description><link>http://github.com/dylang/node-rss</link><generator>GatsbyJS</generator><lastBuildDate>Thu, 23 Jan 2020 06:00:36 GMT</lastBuildDate><item><title><![CDATA[Gatsby와 GitHub Pages로 블로그 시작]]></title><description><![CDATA[ 2020년 새롭게 블로그를 운영하기 위해서 Gatsby와 Github Pages로 블로그를 운영하기로 결정했다. 이 글은 어떤 기술을 사용해서 블로그를 운영하고 있는지에 대한 내용을 소개할 것이다.]]></description><link>https://blog.sungkwang.me/articles/2020/01/21/start-a-blog-gatsby-and-github-pages/</link><guid isPermaLink="false">https://blog.sungkwang.me/articles/2020/01/21/start-a-blog-gatsby-and-github-pages/</guid><pubDate>Wed, 22 Jan 2020 01:51:00 GMT</pubDate><content:encoded>&lt;h1&gt;서론&lt;/h1&gt;
&lt;p&gt;2020년 새롭게 블로그를 운영하기 위해서 &lt;a href=&quot;https://www.gatsbyjs.org/&quot;&gt;Gatsby&lt;/a&gt; 와 &lt;a href=&quot;https://pages.github.com/&quot;&gt;Github Pages&lt;/a&gt; 로 블로그를 운영하기로 결정했다. 사실 이 결정을 말하기 위해서는 구구절절 스토리가 있지만 이 글은 어떤 기술을 사용해서 블로그를 운영하고 있는지에 대한 내용을 소개할 것이다. 그 스토리는 관련연구라는 제목으로 다시 링크를 첨부 할 계획인다.&lt;/p&gt;
&lt;h2&gt;요구사항 정의&lt;/h2&gt;
&lt;p&gt;블로그를 만들기 전에 필요한 요구사항은 다음과 같다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PC 와 Mobile 모두 지원&lt;/li&gt;
&lt;li&gt;Twitter Card 와 Facebook Open Graph 지원&lt;/li&gt;
&lt;li&gt;SEO 지원&lt;/li&gt;
&lt;li&gt;Markdown 지원&lt;/li&gt;
&lt;li&gt;Code Highlight 지원&lt;/li&gt;
&lt;li&gt;RSS 지원&lt;/li&gt;
&lt;li&gt;Sitemap 지원&lt;/li&gt;
&lt;li&gt;Google Analytics 지원&lt;/li&gt;
&lt;li&gt;한글 가독성 좋은 폰트 사용&lt;/li&gt;
&lt;li&gt;Sass 지원&lt;/li&gt;
&lt;li&gt;Tag 와 Category 지원&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;운영환경&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;운영체제&lt;/strong&gt; : MacOS&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Node.js 버전&lt;/strong&gt; : 10.14.1 (&lt;a href=&quot;https://github.com/nodenv/nodenv&quot;&gt;nodenv&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Gatsby 설치&lt;/h2&gt;
&lt;p&gt;Gatsby를 사용하기 위해서 가장먼저 해야 할 일은 &lt;a href=&quot;https://www.gatsbyjs.org/docs/gatsby-cli/&quot;&gt;Gatsby CLI&lt;/a&gt;를 설치하는 것이다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;npm install -g gatsby-cli&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;/p&gt;
&lt;h2&gt;Gatsby Staters&lt;/h2&gt;
&lt;p&gt;Gatsy는 &lt;a href=&quot;https://www.gatsbyjs.org/docs/starters/&quot;&gt;Gatsby Starters&lt;/a&gt;를 이용하면 Gatsby를 완벽하게 이해하지 않아도 곧 바로 시작할 수 있다. Gatsby는 다양한 Starter Library를 제공하거나 개발자들이 많은 것을 공유하고 있다. Spring Boot 프로젝트의 &lt;a href=&quot;https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#using-boot-starter&quot;&gt;Spring Boot Starters&lt;/a&gt; 와 비슷하다.&lt;/p&gt;
&lt;p&gt;위에서 블로그를 운영할 때 필요한 요구사항을 정의했다. Gatsby Starter 중에서 정의한 요구사항을 지원하는 starter는 &lt;a href=&quot;https://www.gatsbyjs.org/starters/alxshelepenok/gatsby-starter-lumen/&quot;&gt;gatsby-starter-lumen&lt;/a&gt; 이 있었다. 현재 Gatsby는 &lt;a href=&quot;https://www.gatsbyjs.org/blog/2018-09-17-gatsby-v2/&quot;&gt;Gatsby v2&lt;/a&gt;이다. 그래서 Gatsby v2를 지원하는 &lt;a href=&quot;https://www.gatsbyjs.org/starters/GatsbyCentral/gatsby-v2-starter-lumen/&quot;&gt;gatsby-v2-starter-lumen&lt;/a&gt;를 이용하기로 했다.&lt;/p&gt;
&lt;p&gt;starter 를 이용하여 시작할 때는 stater의 저장소에서 코드를 받아온다. starter 로 만든 디렉토리는 이후에 GitHub 의 저장소를 사용할 것이라 디렉토리 이름을 GitHub 의 저장소의 이름과 동일하게 &lt;code class=&quot;language-text&quot;&gt;blog.sungkwang.me&lt;/code&gt; 로 만들었다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;gatsby new blog.sungkwang.me https://github.com/GatsbyCentral/gatsby-v2-starter-lumen&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Gatsby Starters 를 사용하여 프로젝트를 생성하면 특별한 설정 없이 바로 시작할 수 있다. 생성한 프로젝트 디렉토리로 이둥 후 &lt;code class=&quot;language-text&quot;&gt;gatsby develop&lt;/code&gt; 명령을 사용하면 자동으로 필요한 파일들이 빌드되고 &lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;gatsby develop&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://hbn-assets-blog.s3.amazonaws.com/sungkwang/images/Screen%20Shot%202020-01-22%20at%205.07.40%20PM.png&quot;&gt;&lt;/p&gt;
&lt;h2&gt;gatsby-config.js 수정&lt;/h2&gt;
&lt;p&gt;Gatsby starters 를 사용하여 생성된 프로젝트 안에 &lt;code class=&quot;language-text&quot;&gt;gatsby-config.js&lt;/code&gt; 파일이 있는데 이 파일은 어플리케이션 설정에 관련된 내용이 저장되어 있다. 기본적으로 만들어진 정보는 내가 서비스하려는 내용과 다르기 때문에 이 파일을 자신의 환경에 맞게 수정해야 한다.&lt;/p&gt;
&lt;p&gt;크게 수정해야할 항목은 다음과 같다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;url&lt;/strong&gt;: 사이트가 운영될 실제 URL로 수정&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;title&lt;/strong&gt;: 사이트 타이틀 수정&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;subtitle&lt;/strong&gt;: 사이트 설명 수정&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;author.name&lt;/strong&gt;: 이름 수정&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;author.email&lt;/strong&gt;: 이메일 주소 수정&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;author.twitter&lt;/strong&gt;: Twitter 계정 수정 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;author.github&lt;/strong&gt;: GitHub 계정 수정&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;plugins.gatsby-plugin-google-analytics&lt;/strong&gt;: Google Analytics TrackingID 수정 &lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; url &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;https://blog.sungkwang.me&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
module&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;exports &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  siteMetadata&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    url&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    siteUrl&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; url&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    title&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;SungKwang&apos;s Blog&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    subtitle&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token string&quot;&gt;&quot;I&apos;m a full stack developer&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    copyright&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;SungKwang © All rights reserved.&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    disqusShortname&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    menu&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        label&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;Articles&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        path&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;/&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        label&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;About me&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        path&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;/about/&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        label&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;Contact me&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        path&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;/contact/&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    author&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      name&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;SungKwang Song&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      email&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;tech@sungkwang.me&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      telegram&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;#&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      twitter&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;sungkwangsong&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      github&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;sungkwangsong&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      rss&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;#&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      vk&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;#&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;
  plugins&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      resolve&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;gatsby-plugin-google-analytics&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      options&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; trackingId&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;UA-120131969-3&apos;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;프로필 사진 수정&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;gatsby-starter-lumen&lt;/code&gt; 의 starter 에서 프로필 사진은 &lt;code class=&quot;language-text&quot;&gt;src/pages/photo.jpg&lt;/code&gt; 로 저장이 되어 있다. 개인적으로 프로필 사진을 수정하고 싶을 경우 자신의 프로필 사진을 이 경로에 저장하면 된다. 만약 다른 이름으로 수정하고 싶을 경우는 다음과 같이 진행한다. &lt;/p&gt;
&lt;p&gt;만약 프로필 사진을 &lt;code class=&quot;language-text&quot;&gt;src/pages/profile.png&lt;/code&gt; 로 저장했다고 한다면 &lt;code class=&quot;language-text&quot;&gt;src/components/Sidebar/index.jsx&lt;/code&gt; 파일에서 프로필 사진을 임포트하는 부분을 수정한다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; React &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;react&apos;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;lodash/get&apos;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; Link &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;gatsby&apos;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; Menu &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;../Menu&apos;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; Links &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;../Links&apos;&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// import profilePic from &apos;../../pages/photo.jpg&apos;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; profilePic &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;../../pages/profile.png&apos;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;./style.scss&apos;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Sidebar&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;React&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Component&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;gatsby develop&lt;/code&gt; 로 서버를 시작하면 소스코드를 고치고난 뒤 직접 서버를 재시작할 필요가 없다. 자동으로 코드를 반영해서 재시작하기 때문에 브라우저에서 바로 확인이 가능하다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://hbn-assets-blog.s3.amazonaws.com/sungkwang/images/Screen%20Shot%202020-01-23%20at%201.53.46%20PM.png&quot;&gt;&lt;/p&gt;
&lt;h2&gt;GitHub Repository 생성&lt;/h2&gt;
&lt;p&gt;Getsby를 사용하여 개인 사이트를 운영할 때 다양한 방법이 존재한다. 자신이 직접 서버를 구축하기도 하고 &lt;a href=&quot;https://www.netlify.com/&quot;&gt;Netlify&lt;/a&gt;를 사용하기도 한다. 기본적으로 &lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt;를 사용해서 블로그를 운영했기 때문에 Github Pages를 선택했다.&lt;/p&gt;
&lt;p&gt;GitHub Pages로 사이트를 운영하기 위해서는 우선 GitHub 에 저장소를 만들어야 한다. 이 블로그는 &lt;a href=&quot;https://github.com/sungkwangsong/blog.sungkwang.me/&quot;&gt;https://github.com/sungkwangsong/blog.sungkwang.me/&lt;/a&gt; 로 저장소를 만들었다.&lt;/p&gt;
&lt;p&gt;GitHub Pages는 &lt;code class=&quot;language-text&quot;&gt;gh-pages&lt;/code&gt;라는 브랜치의 코드로 사이트가 운영되기 때문에 소스코드는 &lt;code class=&quot;language-text&quot;&gt;master&lt;/code&gt; 에 존재하고 배포할 때만 &lt;code class=&quot;language-text&quot;&gt;gh-pages&lt;/code&gt; 로 빌드된 파일을 올려야 한다. &lt;strong&gt;gatsby-v2-starter-lumen&lt;/strong&gt;는 이미 &lt;code class=&quot;language-text&quot;&gt;package.json&lt;/code&gt; 스크립트 안에 &lt;code class=&quot;language-text&quot;&gt;deploy&lt;/code&gt; 코드가 포함되어 있기 때문에 특별히 다른 코드 작성을 하지 않고도 쉽게 &lt;code class=&quot;language-text&quot;&gt;npm run deploy&lt;/code&gt; GitHub Pages 로 코드를 배포할 수 있다.&lt;/p&gt;
&lt;p&gt;처음 Gatsby Starters 를 이용하여 만든 디렉토리를 GitHub 저장소를 Clone 받아서 그 안으로 모두 넣어주거나 생성된 저장소에서 &lt;code class=&quot;language-text&quot;&gt;git remote add&lt;/code&gt; 를 사용하여 저장소 주소를 추가한다. &lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;git remote add origin https://github.com/sungkwangsong/blog.sungkwang.me.git&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;GitHub 저장소가 &lt;strong&gt;git remote&lt;/strong&gt; 로 추가되면 &lt;code class=&quot;language-text&quot;&gt;master&lt;/code&gt; 로 소스코드를 &lt;code class=&quot;language-text&quot;&gt;push&lt;/code&gt; 한다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;git push -u origin master&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;이제 실제 GitHub Pages 로 운영하기 위한 빌드 코드를 배포할 차례이다. 먼저 &lt;code class=&quot;language-text&quot;&gt;gatsby build&lt;/code&gt; 로 코드를 빌드한다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;gatsby build&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;빌드가 끝나면 배포를 위한 코드가 &lt;code class=&quot;language-text&quot;&gt;public&lt;/code&gt; 디렉토리 안에 모두 빌드된다. 이후 &lt;code class=&quot;language-text&quot;&gt;npm run deploy&lt;/code&gt; 명령어를 사용하여 저장소의 &lt;code class=&quot;language-text&quot;&gt;gh-pages&lt;/code&gt; 브랜치로 빌드된 코드를 배포한다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;npm run deploy&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;package.json&lt;/code&gt; 을 열어서 &lt;code class=&quot;language-text&quot;&gt;deploy&lt;/code&gt; 스크립트를 확인하면 다음과 같다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;json&quot;&gt;&lt;pre class=&quot;language-json&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span class=&quot;token property&quot;&gt;&quot;scripts&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;&quot;develop&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;gatsby develop&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;&quot;build&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;gatsby build&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;&quot;deploy&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;gatsby build --prefix-paths &amp;amp;&amp;amp; gh-pages -d public&quot;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;커스텀 도메인을 위한 CNAME 적용&lt;/h2&gt;
&lt;p&gt;만약 개인적으로 사이트 도메인을 가지고 있다면 빌드 후 &lt;code class=&quot;language-text&quot;&gt;public&lt;/code&gt; 디렉토리 안에 &lt;code class=&quot;language-text&quot;&gt;CNAME&lt;/code&gt; 파일을 추가해야한다. CNAME 파일 안에는 도메인을 추가하고 저장해야한다. GitHub Pages 에 도메인을 적용하는 방법은 다음 링크에서 확인 할 수 있다.
&lt;a href=&quot;https://help.github.com/en/github/working-with-github-pages/configuring-a-custom-domain-for-your-github-pages-site&quot;&gt;Configuring a custom domain for your GitHub Page site&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;blog.sunagkwang.me&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;하지만 빌드할 때마다 &lt;code class=&quot;language-text&quot;&gt;public&lt;/code&gt; 디렉토리는 삭제된 후 빌드된 코드가 생성되기 때문에 항상 deploy를 할 때 CNAME을 넣어주는 일은 힘든일이다. Gatsby는 다양한 plugins 이 이미 존재하고 있다. &lt;a href=&quot;https://www.gatsbyjs.org/packages/gatsby-plugin-cname/&quot;&gt;gatsby-plugin-cname&lt;/a&gt;는 GatsBy 가 빌드 될 때 자동으로 &lt;code class=&quot;language-text&quot;&gt;siteUrl&lt;/code&gt; 값을 가지고 CNAME 파일을 생성해주는 플러그인이다. &lt;/p&gt;
&lt;p&gt;플러그인을 사용해보자. 먼저 플러그인을 설치한다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;npm install --save gatsby-plugin-cname&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;gatsby-plugin-name 을 설치한 후에 &lt;code class=&quot;language-text&quot;&gt;gatsby-config.js&lt;/code&gt; 파일을 열어서 &lt;code class=&quot;language-text&quot;&gt;plugins&lt;/code&gt; 설정하는 곳에 다음과 같이 플러그인을 추가한다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;
  plugins&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;token string&quot;&gt;&apos;gatsby-plugin-cname&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;//추가되는 부분 &lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      resolve&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;gatsby-source-filesystem&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      options&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        path&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;__dirname&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;/src/pages&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        name&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;pages&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;이제 &lt;code class=&quot;language-text&quot;&gt;gatsby build&lt;/code&gt; 로 빌드할 때 자동으로 &lt;code class=&quot;language-text&quot;&gt;CNAME&lt;/code&gt; 파일 까지 생성하기 때문에 빌드 후 &lt;code class=&quot;language-text&quot;&gt;npm run deploy&lt;/code&gt; 를 하면 GitHub Pages 에 배포되어 도메인으로 접속이 가능하다.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.sungkwang.me/&quot;&gt;https://blog.sungkwang.me/&lt;/a&gt; &lt;/p&gt;
&lt;h2&gt;결론&lt;/h2&gt;
&lt;p&gt;블로그를 새로 시작하면서 &lt;strong&gt;Gatsby&lt;/strong&gt;를 선택한 이유 중에는 &lt;a href=&quot;https://reactjs.org/&quot;&gt;React&lt;/a&gt;를 제대로 학습하기 위한 것도 있다. React를 시작하면서 그 많은 책을 보면서도 왜 Raact를 사용하면 좋은지 체감할 수 없었기 때문에 실제 React로 만든 서비스를 운영하면서 React 코드를 적용해보고 싶었다. Gatsby는 이런 나의 요구사항을 잘 반영하고 있었다. 처음 React를 시작하는 사람들에게 Gatsby를 추천하고 싶은 이유이다. &lt;/p&gt;
&lt;p&gt;Gatsby를 공식문서로 시작하면 어쩌면 어려울 수 있다. 생각보다 설정도 많고 무엇보다 React 에 대한 사전지식이 필요하기 때문인데 Gatsby Starters를 이용하면 바로 Gatsby를 시작할 수 있는데 Staters는 대부분 완벽한 구조를 가지고 있고 &lt;code class=&quot;language-text&quot;&gt;gatsby-config.js&lt;/code&gt; 수정으로만 서비스를 바로 사용할 수 있다.&lt;/p&gt;
&lt;h2&gt;향후과제&lt;/h2&gt;
&lt;p&gt;Gatsby Starters 는 말 그래도 Gatsby를 시작할 때 빠르게 시작할 수 있는 도구이다. 자신이 원하는 구조와 스타일을 위해서 기본 코드를 수정해서 적용하면 되는데 GraphQL 을 확인하면서 React로 코드를 작성하면 된다. 앞으로 이 블로그를 운영하면서 수정한 부분도 함께 포스팅할 예정이다.&lt;/p&gt;
&lt;h2&gt;참고&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Gatsby Starters&lt;/strong&gt;, &lt;a href=&quot;https://www.gatsbyjs.org/docs/starters/&quot;&gt;https://www.gatsbyjs.org/docs/starters/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Gatsby Starters Library&lt;/strong&gt;, &lt;a href=&quot;https://www.gatsbyjs.org/starters/?v=2&quot;&gt;https://www.gatsbyjs.org/starters/?v=2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;How Gatsby Works with GitHub Pages&lt;/strong&gt;, &lt;a href=&quot;https://www.gatsbyjs.org/docs/how-gatsby-works-with-github-pages/&quot;&gt;https://www.gatsbyjs.org/docs/how-gatsby-works-with-github-pages/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;gatsby-plugin-cname&lt;/strong&gt;, &lt;a href=&quot;https://www.gatsbyjs.org/packages/gatsby-plugin-cname/&quot;&gt;https://www.gatsbyjs.org/packages/gatsby-plugin-cname/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Configuring a custom domain for your GitHub Pages site&lt;/strong&gt;, &lt;a href=&quot;https://help.github.com/en/github/working-with-github-pages/configuring-a-custom-domain-for-your-github-pages-site&quot;&gt;https://help.github.com/en/github/working-with-github-pages/configuring-a-custom-domain-for-your-github-pages-site&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[긴 시간은 끝났다]]></title><description><![CDATA[앞이 보이지 않는 동굴 속에서 길을 찾는 방법은 다른 사람이 날 찾을 수 있게 소리를 치는 일이 전부이다. 만약 손에 불을 밝힐 기름을 가지고 있다면 촛대의 불을 밝혀서 준비할 수 있다.]]></description><link>https://blog.sungkwang.me/articles/2020/01/21/start-a-new-blog/</link><guid isPermaLink="false">https://blog.sungkwang.me/articles/2020/01/21/start-a-new-blog/</guid><pubDate>Mon, 20 Jan 2020 01:51:00 GMT</pubDate><content:encoded>&lt;div class=&quot;gatsby-resp-iframe-wrapper&quot; style=&quot;padding-bottom: 56.25%; position: relative; height: 0; overflow: hidden; margin-bottom: 1.0725rem&quot; &gt; &lt;iframe src=&quot;https://www.youtube.com/embed/KJ2Mgl6np04&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen style=&quot;min-width:100%; position: absolute; top: 0; left: 0; width: 100%; height: 100%; &quot;&gt;&lt;/iframe&gt; &lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;그렇게 긴 시간은 끝났다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;이전에 &lt;strong&gt;saltfactory&lt;/strong&gt; 라는 이름으로 블로그를 운영하였다. 몇 년을 배우고 공부하던 내용을 기록처럼 남겼는데 그렇게 남긴 컨텐츠가 꽤 많았었다. 하지만 회사 연구소에서 점점 해야할 일이 많아지면서 자연스럽게 블로그 운영을 할 시간이 부족해졌다. 연구하고 개발하는 시간이 많아져서 더 많은 경험과 지식이 쌓여갔지만 정작 기록할 시간이 없었다. 그래서 Github Pages 와 같이 빌드해서 배포하는 블로그 형태는 왠지 시간이 아까워서 Medium 을 유료로 구독하고 있었지만 1년이 넘게 쓴 글은 고작 10개도 안되었다. 그 중에서도 오픈한 글은 5개도 안되니 이건 시간의 문제가 아니였다고 생각된다.&lt;/p&gt;
&lt;p&gt;지나서 생각해보니… 긴 여정 속에서 정작 중요한 것을 잊고 지낸것 같다. &lt;/p&gt;
&lt;p&gt;아니다. 이렇게 블로그를 다시 시작하게된 계기는 어쩌면 긴 여정에서 하나의 이정표를 꽂는 나를 다시 찾는 시간을 만들기 위해서인것 같다.&lt;/p&gt;
&lt;p&gt;앞이 보이지 않는 동굴 속에서 길을 찾는 방법은 다른 사람이 날 찾을 수 있게 소리를 치는 일이 전부이다. 만약 손에 불을 밝힐 기름을 가지고 있다면 촛대의 불을 밝혀서 준비할 수 있다. &lt;/p&gt;
&lt;p&gt;바쁜 일정 속에서 saltfactory 로 운영하던 블로그는 더 이상 존재하지 않지만 나는 다시 글을 쓰기로 다짐한다. 그렇게 긴 시간의 끝에서 나는 다시 아무것도 아닌 존재였던 처음으로 돌아가 소리지르며 불을 밝힐 기름을 준비한다.&lt;/p&gt;</content:encoded></item></channel></rss>