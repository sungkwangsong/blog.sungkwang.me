{"componentChunkName":"component---src-templates-post-template-jsx","path":"/articles/2020/01/21/start-a-blog-gatsby-and-github-pages/","result":{"data":{"site":{"siteMetadata":{"siteUrl":"https://blog.sungkwang.me","title":"SungKwang's Blog","subtitle":"I'm a full stack web developer.","copyright":"SungKwang © All rights reserved.","author":{"name":"송성광","twitter":"sungkwangsong","facebook":"sungkwang.me","facebookAppID":"2442879779086354"},"disqusShortname":"","url":"https://blog.sungkwang.me"}},"markdownRemark":{"id":"4280cf7f-8059-563d-a3c3-ac1801dfe3fb","html":"<h1>서론</h1>\n<p>2020년 새롭게 블로그를 운영하기 위해서 <a href=\"https://www.gatsbyjs.org/\">Gatsby</a> 와 <a href=\"https://pages.github.com/\">Github Pages</a> 로 블로그를 운영하기로 결정했다. 사실 이 결정을 말하기 위해서는 구구절절 스토리가 있지만 이 글은 어떤 기술을 사용해서 블로그를 운영하고 있는지에 대한 내용을 소개할 것이다. 그 스토리는 관련연구라는 제목으로 다시 링크를 첨부 할 계획인다.</p>\n<h2>요구사항 정의</h2>\n<p>블로그를 만들기 전에 필요한 요구사항은 다음과 같다.</p>\n<ul>\n<li>PC 와 Mobile 모두 지원</li>\n<li>Twitter Card 와 Facebook Open Graph 지원</li>\n<li>SEO 지원</li>\n<li>Markdown 지원</li>\n<li>Code Highlight 지원</li>\n<li>RSS 지원</li>\n<li>Sitemap 지원</li>\n<li>Google Analytics 지원</li>\n<li>한글 가독성 좋은 폰트 사용</li>\n<li>Sass 지원</li>\n<li>Tag 와 Category 지원</li>\n</ul>\n<h2>운영환경</h2>\n<ul>\n<li><strong>운영체제</strong> : MacOS</li>\n<li><strong>Node.js 버전</strong> : 10.14.1 (<a href=\"https://github.com/nodenv/nodenv\">nodenv</a>)</li>\n</ul>\n<h2>Gatsby 설치</h2>\n<p>Gatsby를 사용하기 위해서 가장먼저 해야 할 일은 <a href=\"https://www.gatsbyjs.org/docs/gatsby-cli/\">Gatsby CLI</a>를 설치하는 것이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm install -g gatsby-cli</code></pre></div>\n<p>\u001e</p>\n<h2>Gatsby Staters</h2>\n<p>Gatsy는 <a href=\"https://www.gatsbyjs.org/docs/starters/\">Gatsby Starters</a>를 이용하면 Gatsby를 완벽하게 이해하지 않아도 곧 바로 시작할 수 있다. Gatsby는 다양한 Starter Library를 제공하거나 개발자들이 많은 것을 공유하고 있다. Spring Boot 프로젝트의 <a href=\"https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#using-boot-starter\">Spring Boot Starters</a> 와 비슷하다.</p>\n<p>위에서 블로그를 운영할 때 필요한 요구사항을 정의했다. Gatsby Starter 중에서 정의한 요구사항을 지원하는 starter는 <a href=\"https://www.gatsbyjs.org/starters/alxshelepenok/gatsby-starter-lumen/\">gatsby-starter-lumen</a> 이 있었다. 현재 Gatsby는 <a href=\"https://www.gatsbyjs.org/blog/2018-09-17-gatsby-v2/\">Gatsby v2</a>이다. 그래서 Gatsby v2를 지원하는 <a href=\"https://www.gatsbyjs.org/starters/GatsbyCentral/gatsby-v2-starter-lumen/\">gatsby-v2-starter-lumen</a>를 이용하기로 했다.</p>\n<p>starter 를 이용하여 시작할 때는 stater의 저장소에서 코드를 받아온다. starter 로 만든 디렉토리는 이후에 GitHub 의 저장소를 사용할 것이라 디렉토리 이름을 GitHub 의 저장소의 이름과 동일하게 <code class=\"language-text\">blog.sungkwang.me</code> 로 만들었다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">gatsby new blog.sungkwang.me https://github.com/GatsbyCentral/gatsby-v2-starter-lumen</code></pre></div>\n<p>Gatsby Starters 를 사용하여 프로젝트를 생성하면 특별한 설정 없이 바로 시작할 수 있다. 생성한 프로젝트 디렉토리로 이둥 후 <code class=\"language-text\">gatsby develop</code> 명령을 사용하면 자동으로 필요한 파일들이 빌드되고 </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">gatsby develop</code></pre></div>\n<p><img src=\"https://hbn-assets-blog.s3.amazonaws.com/sungkwang/images/Screen%20Shot%202020-01-22%20at%205.07.40%20PM.png\"></p>\n<p>서버가 실행되면 두가지 URL 정보를 확인할 수 있다. </p>\n<ul>\n<li><a href=\"http://localhost:8000/\">http://localhost:8000/</a></li>\n<li><a href=\"http://localhost:8000/___graphql\">http://localhost:8000/___graphql</a></li>\n</ul>\n<p>Gatsby는 내부적으로 <a href=\"https://graphql.org/\">GraphQL</a>를 사용하여 데이터를 가져오는데 Gatsby 자체적으로 GraphQL 에 Query를 할 수 있는 인터페이스를 제공하고 있다. GraphQL 인터페이스에서 query를 직접 작성해서 데이터를 가져오는 결과를 확인할 수 있어 이후에 React 로 컴포넌트를 만들 때나 Gatsby의 컴포넌트와 레이아웃을 수정할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-graphql\"><code class=\"language-graphql\"><span class=\"token keyword\">query</span> MyQuery <span class=\"token punctuation\">{</span>\n  allMarkdownRemark<span class=\"token punctuation\">(</span><span class=\"token attr-name\">limit</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    edges <span class=\"token punctuation\">{</span>\n      node <span class=\"token punctuation\">{</span>\n        fields <span class=\"token punctuation\">{</span>\n          slug\n        <span class=\"token punctuation\">}</span>\n        frontmatter <span class=\"token punctuation\">{</span>\n          title\n          description\n          path\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><img src=\"https://hbn-assets-blog.s3.amazonaws.com/sungkwang/images/Screen%20Shot%202020-01-23%20at%203.09.51%20PM.png\"></p>\n<h2>gatsby-config.js 수정</h2>\n<p>Gatsby starters 를 사용하여 생성된 프로젝트 안에 <code class=\"language-text\">gatsby-config.js</code> 파일이 있는데 이 파일은 어플리케이션 설정에 관련된 내용이 저장되어 있다. 기본적으로 만들어진 정보는 내가 서비스하려는 내용과 다르기 때문에 이 파일을 자신의 환경에 맞게 수정해야 한다.</p>\n<p>크게 수정해야할 항목은 다음과 같다.</p>\n<ul>\n<li><strong>url</strong>: 사이트가 운영될 실제 URL로 수정</li>\n<li><strong>title</strong>: 사이트 타이틀 수정</li>\n<li><strong>subtitle</strong>: 사이트 설명 수정</li>\n<li><strong>author.name</strong>: 이름 수정</li>\n<li><strong>author.email</strong>: 이메일 주소 수정</li>\n<li><strong>author.twitter</strong>: Twitter 계정 수정 </li>\n<li><strong>author.github</strong>: GitHub 계정 수정</li>\n<li><strong>plugins.gatsby-plugin-google-analytics</strong>: Google Analytics TrackingID 수정 </li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">...</span>\n<span class=\"token keyword\">const</span> url <span class=\"token operator\">=</span> <span class=\"token string\">'https://blog.sungkwang.me'</span><span class=\"token punctuation\">;</span>\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  siteMetadata<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    url<span class=\"token punctuation\">,</span>\n    siteUrl<span class=\"token operator\">:</span> url<span class=\"token punctuation\">,</span>\n    title<span class=\"token operator\">:</span> <span class=\"token string\">\"SungKwang's Blog\"</span><span class=\"token punctuation\">,</span>\n    subtitle<span class=\"token operator\">:</span>\n      <span class=\"token string\">\"I'm a full stack developer\"</span><span class=\"token punctuation\">,</span>\n    copyright<span class=\"token operator\">:</span> <span class=\"token string\">'SungKwang © All rights reserved.'</span><span class=\"token punctuation\">,</span>\n    disqusShortname<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n    menu<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        label<span class=\"token operator\">:</span> <span class=\"token string\">'Articles'</span><span class=\"token punctuation\">,</span>\n        path<span class=\"token operator\">:</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        label<span class=\"token operator\">:</span> <span class=\"token string\">'About me'</span><span class=\"token punctuation\">,</span>\n        path<span class=\"token operator\">:</span> <span class=\"token string\">'/about/'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        label<span class=\"token operator\">:</span> <span class=\"token string\">'Contact me'</span><span class=\"token punctuation\">,</span>\n        path<span class=\"token operator\">:</span> <span class=\"token string\">'/contact/'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    author<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      name<span class=\"token operator\">:</span> <span class=\"token string\">'SungKwang Song'</span><span class=\"token punctuation\">,</span>\n      email<span class=\"token operator\">:</span> <span class=\"token string\">'tech@sungkwang.me'</span><span class=\"token punctuation\">,</span>\n      telegram<span class=\"token operator\">:</span> <span class=\"token string\">'#'</span><span class=\"token punctuation\">,</span>\n      twitter<span class=\"token operator\">:</span> <span class=\"token string\">'sungkwangsong'</span><span class=\"token punctuation\">,</span>\n      github<span class=\"token operator\">:</span> <span class=\"token string\">'sungkwangsong'</span><span class=\"token punctuation\">,</span>\n      rss<span class=\"token operator\">:</span> <span class=\"token string\">'#'</span><span class=\"token punctuation\">,</span>\n      vk<span class=\"token operator\">:</span> <span class=\"token string\">'#'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token operator\">...</span>\n  plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token operator\">...</span>\n    <span class=\"token punctuation\">{</span>\n      resolve<span class=\"token operator\">:</span> <span class=\"token string\">'gatsby-plugin-google-analytics'</span><span class=\"token punctuation\">,</span>\n      options<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> trackingId<span class=\"token operator\">:</span> <span class=\"token string\">'UA-120131969-3'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token operator\">...</span>\n  <span class=\"token punctuation\">]</span></code></pre></div>\n<h2>프로필 사진 수정</h2>\n<p><code class=\"language-text\">gatsby-starter-lumen</code> 의 starter 에서 프로필 사진은 <code class=\"language-text\">src/pages/photo.jpg</code> 로 저장이 되어 있다. 개인적으로 프로필 사진을 수정하고 싶을 경우 자신의 프로필 사진을 이 경로에 저장하면 된다. 만약 다른 이름으로 수정하고 싶을 경우는 다음과 같이 진행한다. </p>\n<p>만약 프로필 사진을 <code class=\"language-text\">src/pages/profile.png</code> 로 저장했다고 한다면 <code class=\"language-text\">src/components/Sidebar/index.jsx</code> 파일에서 프로필 사진을 임포트하는 부분을 수정한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n<span class=\"token keyword\">import</span> <span class=\"token keyword\">get</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'lodash/get'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Link <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'gatsby'</span>\n<span class=\"token keyword\">import</span> Menu <span class=\"token keyword\">from</span> <span class=\"token string\">'../Menu'</span>\n<span class=\"token keyword\">import</span> Links <span class=\"token keyword\">from</span> <span class=\"token string\">'../Links'</span>\n<span class=\"token comment\">// import profilePic from '../../pages/photo.jpg'</span>\n<span class=\"token keyword\">import</span> profilePic <span class=\"token keyword\">from</span> <span class=\"token string\">'../../pages/profile.png'</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'./style.scss'</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Sidebar</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token operator\">...</span></code></pre></div>\n<p><code class=\"language-text\">gatsby develop</code> 로 서버를 시작하면 소스코드를 고치고난 뒤 직접 서버를 재시작할 필요가 없다. 자동으로 코드를 반영해서 재시작하기 때문에 브라우저에서 바로 확인이 가능하다.</p>\n<p><img src=\"https://hbn-assets-blog.s3.amazonaws.com/sungkwang/images/Screen%20Shot%202020-01-23%20at%201.53.46%20PM.png\"></p>\n<h2>GitHub Repository 생성</h2>\n<p>Getsby를 사용하여 개인 사이트를 운영할 때 다양한 방법이 존재한다. 자신이 직접 서버를 구축하기도 하고 <a href=\"https://www.netlify.com/\">Netlify</a>를 사용하기도 한다. 기본적으로 <a href=\"https://pages.github.com/\">GitHub Pages</a>를 사용해서 블로그를 운영했기 때문에 Github Pages를 선택했다.</p>\n<p>GitHub Pages로 사이트를 운영하기 위해서는 우선 GitHub 에 저장소를 만들어야 한다. 이 블로그는 <a href=\"https://github.com/sungkwangsong/blog.sungkwang.me/\">https://github.com/sungkwangsong/blog.sungkwang.me/</a> 로 저장소를 만들었다.</p>\n<p>GitHub Pages는 <code class=\"language-text\">gh-pages</code>라는 브랜치의 코드로 사이트가 운영되기 때문에 소스코드는 <code class=\"language-text\">master</code> 에 존재하고 배포할 때만 <code class=\"language-text\">gh-pages</code> 로 빌드된 파일을 올려야 한다. <strong>gatsby-v2-starter-lumen</strong>는 이미 <code class=\"language-text\">package.json</code> 스크립트 안에 <code class=\"language-text\">deploy</code> 코드가 포함되어 있기 때문에 특별히 다른 코드 작성을 하지 않고도 쉽게 <code class=\"language-text\">npm run deploy</code> GitHub Pages 로 코드를 배포할 수 있다.</p>\n<p>처음 Gatsby Starters 를 이용하여 만든 디렉토리를 GitHub 저장소를 Clone 받아서 그 안으로 모두 넣어주거나 생성된 저장소에서 <code class=\"language-text\">git remote add</code> 를 사용하여 저장소 주소를 추가한다. </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">git remote add origin https://github.com/sungkwangsong/blog.sungkwang.me.git</code></pre></div>\n<p>GitHub 저장소가 <strong>git remote</strong> 로 추가되면 <code class=\"language-text\">master</code> 로 소스코드를 <code class=\"language-text\">push</code> 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">git push -u origin master</code></pre></div>\n<p>이제 실제 GitHub Pages 로 운영하기 위한 빌드 코드를 배포할 차례이다. 먼저 <code class=\"language-text\">gatsby build</code> 로 코드를 빌드한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">gatsby build</code></pre></div>\n<p>빌드가 끝나면 배포를 위한 코드가 <code class=\"language-text\">public</code> 디렉토리 안에 모두 빌드된다. 이후 <code class=\"language-text\">npm run deploy</code> 명령어를 사용하여 저장소의 <code class=\"language-text\">gh-pages</code> 브랜치로 빌드된 코드를 배포한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm run deploy</code></pre></div>\n<p><code class=\"language-text\">package.json</code> 을 열어서 <code class=\"language-text\">deploy</code> 스크립트를 확인하면 다음과 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"develop\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"gatsby develop\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"gatsby build\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"deploy\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"gatsby build --prefix-paths &amp;&amp; gh-pages -d public\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  </code></pre></div>\n<h2>커스텀 도메인을 위한 CNAME 적용</h2>\n<p>만약 개인적으로 사이트 도메인을 가지고 있다면 빌드 후 <code class=\"language-text\">public</code> 디렉토리 안에 <code class=\"language-text\">CNAME</code> 파일을 추가해야한다. CNAME 파일 안에는 도메인을 추가하고 저장해야한다. GitHub Pages 에 도메인을 적용하는 방법은 다음 링크에서 확인 할 수 있다.\n<a href=\"https://help.github.com/en/github/working-with-github-pages/configuring-a-custom-domain-for-your-github-pages-site\">Configuring a custom domain for your GitHub Page site</a></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">blog.sunagkwang.me</code></pre></div>\n<p>하지만 빌드할 때마다 <code class=\"language-text\">public</code> 디렉토리는 삭제된 후 빌드된 코드가 생성되기 때문에 항상 deploy를 할 때 CNAME을 넣어주는 일은 힘든일이다. Gatsby는 다양한 plugins 이 이미 존재하고 있다. <a href=\"https://www.gatsbyjs.org/packages/gatsby-plugin-cname/\">gatsby-plugin-cname</a>는 GatsBy 가 빌드 될 때 자동으로 <code class=\"language-text\">siteUrl</code> 값을 가지고 CNAME 파일을 생성해주는 플러그인이다. </p>\n<p>플러그인을 사용해보자. 먼저 플러그인을 설치한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm install --save gatsby-plugin-cname</code></pre></div>\n<p>gatsby-plugin-name 을 설치한 후에 <code class=\"language-text\">gatsby-config.js</code> 파일을 열어서 <code class=\"language-text\">plugins</code> 설정하는 곳에 다음과 같이 플러그인을 추가한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">...</span>\n  plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">'gatsby-plugin-cname'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//추가되는 부분 </span>\n    <span class=\"token punctuation\">{</span>\n      resolve<span class=\"token operator\">:</span> <span class=\"token string\">'gatsby-source-filesystem'</span><span class=\"token punctuation\">,</span>\n      options<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        path<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>__dirname<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/src/pages</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n        name<span class=\"token operator\">:</span> <span class=\"token string\">'pages'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token operator\">...</span></code></pre></div>\n<p>이제 <code class=\"language-text\">gatsby build</code> 로 빌드할 때 자동으로 <code class=\"language-text\">CNAME</code> 파일 까지 생성하기 때문에 빌드 후 <code class=\"language-text\">npm run deploy</code> 를 하면 GitHub Pages 에 배포되어 도메인으로 접속이 가능하다.</p>\n<p><a href=\"https://blog.sungkwang.me/\">https://blog.sungkwang.me/</a> </p>\n<h2>결론</h2>\n<p>블로그를 새로 시작하면서 <strong>Gatsby</strong>를 선택한 이유 중에는 <a href=\"https://reactjs.org/\">React</a>를 제대로 학습하기 위한 것도 있다. React를 시작하면서 그 많은 책을 보면서도 왜 Raact를 사용하면 좋은지 체감할 수 없었기 때문에 실제 React로 만든 서비스를 운영하면서 React 코드를 적용해보고 싶었다. Gatsby는 이런 나의 요구사항을 잘 반영하고 있었다. 처음 React를 시작하는 사람들에게 Gatsby를 추천하고 싶은 이유이다. </p>\n<p>Gatsby를 공식문서로 시작하면 어쩌면 어려울 수 있다. 생각보다 설정도 많고 무엇보다 React 에 대한 사전지식이 필요하기 때문인데 Gatsby Starters를 이용하면 바로 Gatsby를 시작할 수 있는데 Staters는 대부분 완벽한 구조를 가지고 있고 <code class=\"language-text\">gatsby-config.js</code> 수정으로만 서비스를 바로 사용할 수 있다.</p>\n<h2>향후과제</h2>\n<p>Gatsby Starters 는 말 그래도 Gatsby를 시작할 때 빠르게 시작할 수 있는 도구이다. 자신이 원하는 구조와 스타일을 위해서 기본 코드를 수정해서 적용하면 되는데 GraphQL 을 확인하면서 React로 코드를 작성하면 된다. 앞으로 이 블로그를 운영하면서 수정한 부분도 함께 포스팅할 예정이다.</p>\n<h2>참고</h2>\n<ul>\n<li><strong>Gatsby Starters</strong>, <a href=\"https://www.gatsbyjs.org/docs/starters/\">https://www.gatsbyjs.org/docs/starters/</a></li>\n<li><strong>Gatsby Starters Library</strong>, <a href=\"https://www.gatsbyjs.org/starters/?v=2\">https://www.gatsbyjs.org/starters/?v=2</a></li>\n<li><strong>How Gatsby Works with GitHub Pages</strong>, <a href=\"https://www.gatsbyjs.org/docs/how-gatsby-works-with-github-pages/\">https://www.gatsbyjs.org/docs/how-gatsby-works-with-github-pages/</a></li>\n<li><strong>gatsby-plugin-cname</strong>, <a href=\"https://www.gatsbyjs.org/packages/gatsby-plugin-cname/\">https://www.gatsbyjs.org/packages/gatsby-plugin-cname/</a></li>\n<li><strong>Configuring a custom domain for your GitHub Pages site</strong>, <a href=\"https://help.github.com/en/github/working-with-github-pages/configuring-a-custom-domain-for-your-github-pages-site\">https://help.github.com/en/github/working-with-github-pages/configuring-a-custom-domain-for-your-github-pages-site</a></li>\n<li><strong>Introduction to GraphQL</strong>, <a href=\"https://graphql.org/learn/\">https://graphql.org/learn/</a></li>\n</ul>","fields":{"tagSlugs":["/tags/gatsby/","/tags/github/"],"slug":"/articles/2020/01/21/start-a-blog-gatsby-and-github-pages/"},"frontmatter":{"path":"/articles/2020/01/21/start-a-blog-gatsby-and-github-pages/","title":"Gatsby와 GitHub Pages로 블로그 시작","tags":["gatsby","github"],"date":"2020-01-22T01:51:00.000Z","description":" 2020년 새롭게 블로그를 운영하기 위해서 Gatsby와 Github Pages로 블로그를 운영하기로 결정했다. 이 글은 어떤 기술을 사용해서 블로그를 운영하고 있는지에 대한 내용을 소개할 것이다.","image":"https://hbn-assets-blog.s3.amazonaws.com/sungkwang/images/gatsby-github-pages.jpg"}}},"pageContext":{"slug":"/articles/2020/01/21/start-a-blog-gatsby-and-github-pages/"}}}